define blockBegin ([char] ->):
  -> name;
  ["<", name, ">"] printEach

define blockEnd ([char] ->):
  -> name;
  ["</", name, ">"] printEach

define block ((->) [char] ->) {
  -> contents name;
  name blockBegin
  contents apply
  name blockEnd
}

define printEach ([[char]] ->) {
  \print each
}

define attrBlockBegin ([([char] & [char])] [char] ->) {
  -> attrs name;
  ["<", name] printEach
  forEach (attrs) -> attr {
    [ " ",
      attr first,
      "='",
      attr rest,
      "'"
    ] printEach
  }
  ">" print
}

define attrBlock ((->) [([char] & [char])] [char] ->) {
  -> contents attrs name;
  attrs name attrBlockBegin
  contents apply
  name blockEnd
}

define attrTextBlock ([char] [([char] & [char])] [char] ->) {
  -> contents attrs name;
  attrs name attrBlockBegin
  contents print
  name blockEnd
}

define textBlock ([char] [char] ->) {
  -> contents name;
  name blockBegin
  contents print
  name blockEnd
}

define doctype (->) {
  "<!DOCTYPE html>" say
}

define html ((->) ->) {
  "<html lang='en'>" print
  apply
  "</html>" print
}

define charset ([char] ->) {
  "<meta charset='" <...> "'>"
}

define title ([char] ->) {
  "title" textBlock
}

define favicon ([char] ->) {
  "<link rel='icon' href='" <...> "'>"
}

define stylesheet ([char] ->) {
  "<link rel='stylesheet' type='text/css' href='" <...> "'>"
}

define body ((->) ->) {
  "body" block
}

define p ([char] ->) {
  "p" textBlock
}

define blockquote ([char] ->) {
  "blockquote" textBlock
}

define googleAnalytics ([char] [char] ->) {
  -> token domain;
  [ "(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){"
  , "(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),"
  , "m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)"
  , "})(window,document,'script','//www.google-analytics.com/analytics.js','ga');"
  , "ga('create','", token, "','", domain, "');"
  , "ga('require','displayfeatures');"
  , "ga('send','pageview');"
  ] concat "script" textBlock
}

define <...> ([char] [char] [char] ->) {
  -> contents begin end;
  [begin, contents, end] printEach
}

define unorderedList ((->) [([char] & [char])] ->) {
  "ul" attrBlock
}

define definitionList ((->) ->) {
  "dl" block
}

define definitionItem ([char] [char] ->) {
  -> term definition;
  term "dt" textBlock
  definition "dd" textBlock
}

define anchor ([char] [([char] & [char])] ->) {
  "a" attrTextBlock
}

define item ((->) ->) {
  "li" block
}

define anchorItem ([char] [char] ->) {
  -> contents href;
  {
    contents [("href", href)] anchor
  } item
}

define topNavigation (->) {
  { { "Kitten" [("class", "title left"), ("href", "/")] anchor
      [ ("Introduction", "/intro/")
      , ("FAQ", "/faq/")
      , ("Source Code", "https://github.com/evincarofautumn/kitten/")
      ] [("class", "right")] anchorList
    } "body-width" classDiv
  } "header" block
}

define classDiv ((->) [char] ->) {
  -> class;
  [("class", class)] "div" attrBlock
}

define navTitle ([char] ->) {
  [("class", "title")] "h1" attrTextBlock
}

define h1 ([char] ->) {
  "h1" textBlock
}

define h2 ([char] ->) {
  "h2" textBlock
}

define anchorList ([([char] & [char])] [([char] & [char])] ->) {
  -> links attrs;
  {
    forEach (links) {
      unpair anchorItem
    }
  } attrs unorderedList
}

define clear (->) {
  {} "clear" classDiv
}

define example ([char] ->) {
  -> contents;
  { contents "code" textBlock } "pre" block
}

define pageTemplate ((->) ->) {
  -> content;
  doctype
  { { "UTF-8" charset
      "Kitten Programming Language" title
      "/style.css" stylesheet
      "/favicon.ico" favicon
    } "head" block
    { "UA-42446087-1" "kittenlang.org" googleAnalytics
      topNavigation
      { {} "logo" classDiv
        { "Learn" navTitle
          [ ("FAQ", "/faq/")
          , ("Introduction", "/intro/")
          , ("Tutorial", "/tutorial/")
          , ("Documentation", "/documentation/")
          ] [] anchorList
          "Contribute" navTitle
          [ ("Source Code", "https://github.com/evincarofautumn/kitten")
          , ("Bugtracker", "https://github.com/evincarofautumn/kitten/issues")
          , ("IRC", "irc://freenode.net/#concatenative")
          ] [] anchorList
        } "navigation" classDiv
        content "content" classDiv
      } [("class", "body-width")] "article" attrBlock
      clear
      {} "footer" block
    } body
  } html
}
